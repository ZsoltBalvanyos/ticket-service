DROP TABLE IF EXISTS BOOKING_STATUS;
DROP TABLE IF EXISTS BOOKING;
DROP TABLE IF EXISTS PROMOTED_EVENT;
DROP TABLE IF EXISTS PARTNER;

CREATE TABLE PARTNER (
    PARTNER_ID BIGSERIAL PRIMARY KEY,
    NAME TEXT NOT NULL,

    UNIQUE (NAME)
);

CREATE TABLE PROMOTED_EVENT (
    EVENT_ID BIGSERIAL PRIMARY KEY,
    PARTNER_ID BIGINT NOT NULL
);

CREATE TABLE BOOKING (
    BOOKING_ID BIGSERIAL PRIMARY KEY,
    USER_ID BIGINT NOT NULL,
    CARD_ID BIGINT NOT NULL,
    EVENT_ID BIGINT NOT NULL,
    SEAT_ID BIGINT NOT NULL,
    RESERVATION_ID BIGINT,

    CONSTRAINT FK_EVENT_ID_BOOKING
        FOREIGN KEY (EVENT_ID)
            REFERENCES PROMOTED_EVENT(EVENT_ID)
            ON DELETE CASCADE
);

CREATE TABLE BOOKING_STATUS (
    BOOKING_ID BIGSERIAL NOT NULL,
    STATUS TEXT NOT NULL CHECK (STATUS IN (
        'STARTED',
        'AMOUNT_RESERVED',
        'AMOUNT_RESERVATION_FAILED',
        'SEAT_BOOKED',
        'SEAT_BOOKING_FAILED',
        'PAYMENT_COMPLETED',
        'PAYMENT_COMPLETION_FAILED',
        'COMPLETED')),
    CREATED_AT timestamp DEFAULT current_timestamp,

    PRIMARY KEY (BOOKING_ID, STATUS),

    CONSTRAINT FK_BOOKING_ID_BOOKING_STATUS
        FOREIGN KEY (BOOKING_ID)
            REFERENCES BOOKING(BOOKING_ID)
            ON DELETE CASCADE
);
